require('dotenv').config();
const { Telegraf, session, Scenes, Markup } = require('telegraf');
const mongoose = require('mongoose');
const connectDB = require('./database/connect');
const User = require('./database/models/user');
const Admin = require('./database/models/admin');
const Promo = require('./database/models/promo');
const ActivatedPromo = require('./database/models/activatedPromo');
const { mainKeyboard, sellerKeyboard, adminKeyboard } = require('./utils/keyboard');
const { formatDate } = require('./utils/helpers');
const { checkGroupMembership } = require('./middlewares/membership');
const { generatePromoCode } = require('./utils/promo-generator');
const { isAdmin, isSeller } = require('./middlewares/auth');
const { isPrivateChat } = require('./middlewares/private-chat');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connectDB();

// –£—Å—Ç—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ Mongoose
mongoose.set('strictQuery', false);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Å—Å–∏–∏
bot.use(session());
bot.use((ctx, next) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
  if (!ctx.message || !ctx.message.text) {
    return next();
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ (/command) –∏ –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
  if (ctx.message.text.startsWith('/') && ctx.chat && ctx.chat.type !== 'private') {
    console.log(`–ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ: ${ctx.message.text}, —Ç–∏–ø —á–∞—Ç–∞: ${ctx.chat.type}`);
    return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ middleware
  }
  
  // –í –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
  return next();
});

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
const adminHandler = require('./handlers/admin');
const sellerHandler = require('./handlers/seller');

// –ü–æ–ª—É—á–∞–µ–º —Å—Ü–µ–Ω—ã –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
const { scenes: adminScenes } = adminHandler(bot);
const { scenes: sellerScenes, registerSellerHandlers } = sellerHandler(bot);

// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ü–µ–Ω–∞—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log('Admin scenes:', adminScenes.map(scene => scene.id));
console.log('Seller scenes:', sellerScenes.map(scene => scene.id));

// –ë–∞–∑–æ–≤–∞—è —Å—Ü–µ–Ω–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
const promoListScene = new Scenes.BaseScene('promo-list');
promoListScene.enter(async (ctx) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –Ω–µ –∏—Å—Ç–µ–∫—à–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
    const currentDate = new Date();
    const promos = await Promo.find({
      isActive: true,
      expiresAt: { $gt: currentDate },
      $expr: { $lt: ["$usedCount", "$totalLimit"] }
    });
    
    if (promos.length === 0) {
      return ctx.reply('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –Ω–µ—Ç.', mainKeyboard);
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏
    const keyboard = Markup.inlineKeyboard(
      promos.map(promo => [Markup.button.callback(promo.name, `promo:${promo._id}`)])
    );
    
    return ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞:', keyboard);
  } catch (error) {
    console.error('Error in promos list:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.', mainKeyboard);
  }
});

// –í—Å–µ —Å—Ü–µ–Ω—ã –≤–º–µ—Å—Ç–µ
const allScenes = [...adminScenes, ...sellerScenes, promoListScene];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
const sceneIds = {};
const uniqueScenes = [];

for (const scene of allScenes) {
  if (!sceneIds[scene.id]) {
    sceneIds[scene.id] = true;
    uniqueScenes.push(scene);
    console.log(`–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å—Ü–µ–Ω—É: ${scene.id}`);
  } else {
    console.log(`–î—É–±–ª–∏–∫–∞—Ç —Å—Ü–µ–Ω—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω –∏ –ø—Ä–æ–ø—É—â–µ–Ω: ${scene.id}`);
  }
}

console.log('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω—ã:', uniqueScenes.map(scene => scene.id));

// –°–æ–∑–¥–∞–µ–º Stage
const stage = new Scenes.Stage(uniqueScenes);
bot.use(stage.middleware());

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞
registerSellerHandlers();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤
bot.command('start', isPrivateChat, async (ctx) => {
  try {
    const { id, first_name, last_name, username } = ctx.from;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const user = await User.findOneAndUpdate(
      { telegramId: id },
      {
        firstName: first_name,
        lastName: last_name,
        username,
      },
      { upsert: true, new: true }
    );
    
    // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–æ–¥–∞–≤–µ—Ü –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    const admin = await Admin.findOne({ telegramId: id });
    if (admin) {
      admin.firstName = first_name || admin.firstName;
      admin.lastName = last_name || admin.lastName;
      admin.username = username || admin.username;
      await admin.save();
    }
    
    return ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.`, mainKeyboard);
  } catch (error) {
    console.error('Error in start command:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ –≤ –≥—Ä—É–ø–ø–∞—Ö
bot.command('myid', (ctx) => {
  ctx.reply(`–í–∞—à Telegram ID: ${ctx.from.id}`);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /admin - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤
bot.command('admin', isPrivateChat, async (ctx) => {
  try {
    const telegramId = ctx.from.id;
    const admin = await Admin.findOne({ telegramId, isActive: true, role: 'admin' });
    
    if (!admin) {
      return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.');
    }
    
    return ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.', adminKeyboard);
  } catch (error) {
    console.error('Error in admin command:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /seller - —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤
bot.command('seller', isPrivateChat, async (ctx) => {
  try {
    const telegramId = ctx.from.id;
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –∑–∞–ø—É—Å—Ç–∏–ª –∫–æ–º–∞–Ω–¥—É /seller –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ`);
    
    const seller = await Admin.findOne({ 
      telegramId, 
      isActive: true,
      $or: [{ role: 'seller' }, { role: 'admin' }]
    });
    
    if (!seller) {
      return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞.');
    }
    
    return ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –ø—Ä–æ–¥–∞–≤—Ü–∞.', sellerKeyboard);
  } catch (error) {
    console.error('Error in seller command:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –ø–∞–Ω–µ–ª—å –ø—Ä–æ–¥–∞–≤—Ü–∞.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–ü—Ä–æ–º–æ–∫–æ–¥—ã', isPrivateChat, (ctx) => {
  return ctx.scene.enter('promo-list');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–æ–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–ú–æ–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã', isPrivateChat, async (ctx) => {
  try {
    const userId = ctx.from.id;
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const user = await User.findOne({ telegramId: userId })
      .populate('claimedPromos.promoId');
    
    if (!user || !user.claimedPromos || user.claimedPromos.length === 0) {
      return ctx.reply('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.', mainKeyboard);
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–æ–∫–æ–¥—ã –ø–æ –¥–∞—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è (–æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º)
    const sortedPromos = [...user.claimedPromos].sort((a, b) => 
      new Date(b.claimedAt) - new Date(a.claimedAt)
    );
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    let message = '–í–∞—à–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã:\n\n';
    
    for (const promoItem of sortedPromos) {
      const { promoId, code, claimedAt, activated, activatedAt } = promoItem;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –µ—â–µ –ø—Ä–æ–º–æ–∫–æ–¥ –≤ –±–∞–∑–µ
      if (!promoId) {
        message += `üîÑ –ö–æ–¥: ${code}\n`;
        message += `–ü—Ä–æ–º–æ–∫–æ–¥ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã\n`;
        message += `–ü–æ–ª—É—á–µ–Ω: ${formatDate(claimedAt)}\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        if (activated) {
          message += `–°—Ç–∞—Ç—É—Å: ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω ${formatDate(activatedAt)}\n`;
        } else {
          message += `–°—Ç–∞—Ç—É—Å: ‚è≥ –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n`;
        }
        
        message += `\n`;
        continue;
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–º–æ–∫–æ–¥–∞
      let statusIcon = '';
      const isExpired = promoId.expiresAt < new Date();
      
      if (!promoId.isActive) {
        statusIcon = '‚ùå'; // –ù–µ–∞–∫—Ç–∏–≤–µ–Ω
      } else if (isExpired) {
        statusIcon = '‚è±Ô∏è'; // –ò—Å—Ç–µ–∫
      } else {
        statusIcon = '‚úÖ'; // –ê–∫—Ç–∏–≤–µ–Ω
      }
      
      message += `${statusIcon} ${promoId.name}\n`;
      message += `–ö–æ–¥: ${code}\n`;
      message += `–û–ø–∏—Å–∞–Ω–∏–µ: ${promoId.description}\n`;
      message += `–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: ${formatDate(promoId.expiresAt)}\n`;
      message += `–ü–æ–ª—É—á–µ–Ω: ${formatDate(claimedAt)}\n`;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
      if (activated) {
        message += `–°—Ç–∞—Ç—É—Å: üîê –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω ${formatDate(activatedAt)}\n`;
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞ - –µ—Å–ª–∏ –æ–Ω –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –æ—Ç—Ä–∞–∂–∞–µ–º —ç—Ç–æ
        if (!promoId.isActive) {
          message += `–°—Ç–∞—Ç—É—Å: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø—Ä–æ–º–æ–∞–∫—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞)\n`;
        } else if (isExpired) {
          message += `–°—Ç–∞—Ç—É—Å: ‚è±Ô∏è –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∏—Å—Ç–µ–∫)\n`;
        } else {
          message += `–°—Ç–∞—Ç—É—Å: üîì –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n`;
        }
      }
      
      message += `\n`;
    }
    
    return ctx.reply(message, mainKeyboard);
  } catch (error) {
    console.error('Error in my promos handler:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.', mainKeyboard);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –≤—Ä—É—á–Ω—É—é" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –≤—Ä—É—á–Ω—É—é', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('activate-promo');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–π" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–ò—Å—Ç–æ—Ä–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–π', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('activated-promos');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º - inline –∫–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∏ –≤ –≥—Ä—É–ø–ø–∞—Ö
bot.action(/promo:(.+)/, async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç
    if (ctx.chat.type !== 'private') {
      await ctx.answerCbQuery('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.');
      return;
    }
    
    const promoId = ctx.match[1];
    const userId = ctx.from.id;
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const user = await User.findOne({ telegramId: userId });
    if (!user) {
      return ctx.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥—ã /start.');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥
    const hasClaimedPromo = user.claimedPromos.some(
      promo => promo.promoId && promo.promoId.toString() === promoId
    );
    
    if (hasClaimedPromo) {
      return ctx.reply('–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥.', mainKeyboard);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–ª–µ–Ω—Å—Ç–≤–æ –≤ –≥—Ä—É–ø–ø–µ
    const isMember = await checkGroupMembership(ctx);
    if (!isMember) {
      return ctx.reply(
        '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã.',
        mainKeyboard
      );
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const promo = await Promo.findById(promoId);
    if (!promo) {
      return ctx.reply('–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.', mainKeyboard);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥
    if (!promo.isActive) {
      return ctx.reply('–≠—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω.', mainKeyboard);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    if (promo.expiresAt < new Date()) {
      return ctx.reply('–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—Ç–µ–∫.', mainKeyboard);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏ –ª–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    if (promo.usedCount >= promo.totalLimit) {
      return ctx.reply('–õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—á–µ—Ä–ø–∞–Ω.', mainKeyboard);
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const generatedCode = generatePromoCode();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    await Promo.findByIdAndUpdate(promoId, { $inc: { usedCount: 1 } });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    user.claimedPromos.push({
      promoId,
      code: generatedCode,
      claimedAt: new Date(),
      activated: false,
      activatedAt: null
    });
    
    await user.save();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ–º–æ–∫–æ–¥
    return ctx.reply(
      `–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: ${generatedCode}\n\n` +
      `–û–ø–∏—Å–∞–Ω–∏–µ: ${promo.description}\n` + 
      `–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: ${formatDate(promo.expiresAt)}`,
      mainKeyboard
    );
  } catch (error) {
    console.error('Error handling promo action:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞.', mainKeyboard);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏', isPrivateChat, isAdmin, (ctx) => {
  ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', Markup.keyboard([
    ['–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤'],
    ['–ù–∞–∑–∞–¥']
  ]).resize());
});

bot.hears('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏', isPrivateChat, isAdmin, (ctx) => {
  ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', Markup.keyboard([
    ['–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–∞'],
    ['–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', '–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤'],
    ['–ù–∞–∑–∞–¥']
  ]).resize());
});

bot.hears('–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É', isPrivateChat, (ctx) => {
  ctx.reply('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞/–ø—Ä–æ–¥–∞–≤—Ü–∞.', mainKeyboard);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('add-promo');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('promo-list-admin');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('add-admin');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('admin-list');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–∞" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–≤—Ü–∞', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('add-seller');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤" - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤', isPrivateChat, isAdmin, (ctx) => {
  ctx.scene.enter('seller-list');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ
bot.hears('–ù–∞–∑–∞–¥', isPrivateChat, isAdmin, (ctx) => {
  ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:', adminKeyboard);
});

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${ctx.updateType}`, err);
  ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.').catch(e => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ:', e);
  });
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch()
  .then(() => console.log('Bot started successfully'))
  .catch((err) => console.error('Error starting bot:', err));

// –í–∫–ª—é—á–µ–Ω–∏–µ graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));